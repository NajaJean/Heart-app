{"remainingRequest":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\src\\pages\\Dashboard.vue","mtime":1616145386061},{"path":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Naja-\\git\\Heart-app\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRGFpbHlSZWNvcmRpbmdEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9EYWlseVJlY29yZGluZ0RhdGFTZXJ2aWNlIjsNCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAiLi4vY29tcG9uZW50cy9MaW5lQ2hhcnQiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBMaW5lQ2hhcnQNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2hhcnRkYXRhOiBbXSwNCiAgICAgIGRhdGFsb2FkZWQ6IGZhbHNlDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIHJldHJpZXZlRGFpbHlSZWNvcmRpbmdzKCkgew0KICAgICAgYXdhaXQgc2xlZXAoMTAwMCk7DQogICAgICBEYWlseVJlY29yZGluZ0RhdGFTZXJ2aWNlLmdldEFsbCgpDQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICB2YXIgZGF0ZXMgPSBbXTsNCiAgICAgICAgICB2YXIgYnBzID0gW107DQogICAgICAgICAgdmFyIGJwZCA9IFtdOw0KICAgICAgICAgIHJlc3BvbnNlLmRhdGEubWFwKGRyID0+IGRhdGVzLnB1c2goZHIuZGF0ZV9wb3N0LnN1YnN0cmluZygwLDMpKSk7DQogICAgICAgICAgcmVzcG9uc2UuZGF0YS5tYXAoZHIgPT4gYnBzLnB1c2goZHIuYmxvb2RfcHJlc3N1cmVfc3lzdG9saWMpKTsNCiAgICAgICAgICByZXNwb25zZS5kYXRhLm1hcChkciA9PiBicGQucHVzaChkci5ibG9vZF9wcmVzc3VyZV9kaWFzdG9saWMpKTsNCg0KICAgICAgICAgIHRoaXMuY2hhcnRkYXRhID0gW2RhdGVzLGJwZCxicHNdOw0KICAgICAgICAgIGNvbnNvbGUubG9nKFtkYXRlcyxicHMsYnBkXSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaChlID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsNCiAgICAgICAgfSk7DQogICAgfQ0KICB9LA0KICBhc3luYyBjcmVhdGVkKCkgew0KICAgIHRoaXMucmV0cmlldmVEYWlseVJlY29yZGluZ3MoKTsNCiAgICBhd2FpdCBzbGVlcCgyMDAwKTsNCiAgICB0aGlzLmRhdGFsb2FkZWQgPSB0cnVlOw0KICB9DQp9Ow0KDQpmdW5jdGlvbiBzbGVlcChtcykgew0KICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7DQp9DQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-33\"\r\n      >\r\n        <line-chart v-if=\"this.dataloaded\" :width=\"370\" :height=\"246\" :chart=\"chartdata\"></line-chart> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport DailyRecordingDataService from \"../services/DailyRecordingDataService\";\r\nimport LineChart from \"../components/LineChart\";\r\n\r\nexport default {\r\n  components: {\r\n    LineChart\r\n  },\r\n  data() {\r\n    return {\r\n      chartdata: [],\r\n      dataloaded: false\r\n    };\r\n  },\r\n  methods: {\r\n    async retrieveDailyRecordings() {\r\n      await sleep(1000);\r\n      DailyRecordingDataService.getAll()\r\n        .then(response => {\r\n          var dates = [];\r\n          var bps = [];\r\n          var bpd = [];\r\n          response.data.map(dr => dates.push(dr.date_post.substring(0,3)));\r\n          response.data.map(dr => bps.push(dr.blood_pressure_systolic));\r\n          response.data.map(dr => bpd.push(dr.blood_pressure_diastolic));\r\n\r\n          this.chartdata = [dates,bpd,bps];\r\n          console.log([dates,bps,bpd]);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  },\r\n  async created() {\r\n    this.retrieveDailyRecordings();\r\n    await sleep(2000);\r\n    this.dataloaded = true;\r\n  }\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n</script>\r\n"]}]}